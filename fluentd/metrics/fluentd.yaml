apiVersion: v1
kind: ServiceAccount
metadata:
  name: fluentd
  namespace: kube-logging
  labels:
    app: fluentd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: fluentd
  labels:
    app: fluentd
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - namespaces
  verbs:
  - get
  - list
  - watch
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fluentd
roleRef:
  kind: ClusterRole
  name: fluentd
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: fluentd
  namespace: kube-logging
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: fluentd-metrics
  namespace: kube-logging
  labels:
    app: fluentd-metrics
spec:
  minReadySeconds: 0
  updateStrategy: 
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 3
  selector:
    matchLabels:
      app: fluentd-metrics
  template:
    metadata:
      labels:
        app: fluentd-metrics
    spec:
      hostNetwork: true
      serviceAccount: fluentd
      serviceAccountName: fluentd
      tolerations:
      - key: node-role.kubernetes.io/master
        effect: NoSchedule
      containers:
      - name: fluentd
        image: dmibay/fluentd-kafka-es-image
        imagePullPolicy: IfNotPresent
        ports:
          - containerPort: 6700
            hostPort: 6700
            name: fluentd-port
            protocol: UDP
        env:
          - name: FLUENT_KAFKA_BROKERS
            value: "kafka-hs.kube-logging.svc.cluster.local"
          - name: FLUENT_KAFKA_DEFAULT_TOPIC
            value: "qa"
        resources:
          requests:
            cpu: 100m
            memory: 200Mi
      terminationGracePeriodSeconds: 30
